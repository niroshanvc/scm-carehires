package com.carehires.actions.jobs;

import com.carehires.pages.jobs.JobsListViewPage;
import com.carehires.utils.BasePage;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.openqa.selenium.support.PageFactory;

public class JobsListViewActions {

    JobsListViewPage listViewPage;

    private static final Logger logger = LogManager.getLogger(JobsListViewActions.class);

    public JobsListViewActions() {
        listViewPage = new JobsListViewPage();
        try {
            PageFactory.initElements(BasePage.getDriver(), listViewPage);
        } catch (BasePage.WebDriverInitializationException e) {
            logger.error("Error while initializing Job List View Page elements: {}", e.getMessage());
        }
    }

    public void writeJobIdToAFile() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Writing autogenerated Job Id into a text file >>>>>>>>>>>>>>>>>>>>");
        BasePage.waitUntilPageCompletelyLoaded();
        String jobIdFullText = BasePage.getAttributeValue(listViewPage.firstJobId, "id");
        String jobId = jobIdFullText.split("item-body-")[1];
    }

    private void clickOnViewDetailedJobInfo() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Move to a three dots and open Detailed Job Info >>>>>>>>>>>>>>>>>>>>");
        BasePage.mouseHoverAndClick(JobsListViewPage.firstThreeDots, JobsListViewPage.viewDetailedJobInfo);
    }

    private void clickOnCopyJobDetails() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Move to a three dots and Copy Job Details >>>>>>>>>>>>>>>>>>>>");
        BasePage.mouseHoverAndClick(JobsListViewPage.firstThreeDots, JobsListViewPage.copyJobDetails);
    }

    private void clickOnChAdminNote() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Move to a three dots and open CH Admin Note >>>>>>>>>>>>>>>>>>>>");
        BasePage.mouseHoverAndClick(JobsListViewPage.firstThreeDots, JobsListViewPage.chAdminNote);
    }

    private void clickOnManageAllocations() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Move to a three dots and open Manage Allocations >>>>>>>>>>>>>>>>>>>>");
        BasePage.mouseHoverAndClick(JobsListViewPage.firstThreeDots, JobsListViewPage.manageAllocations);
    }

    private void clickOnCancelVacancy() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Move to a three dots and open Cancel Vacancy >>>>>>>>>>>>>>>>>>>>");
        BasePage.mouseHoverAndClick(JobsListViewPage.firstThreeDots, JobsListViewPage.cancelVacancy);
    }

    private void clickOnJobDetailPopupCopyJobDetails() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Click on Copy Job Details on Job Detail Popup >>>>>>>>>>>>>>>>>>>>");
        BasePage.mouseHoverAndClick(JobsListViewPage.detailViewThreeDots, JobsListViewPage.detailViewCopyJobDetails);
    }

    private void clickOnJobDetailPopupAuditLog() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Click on Audit Log on Job Detail Popup >>>>>>>>>>>>>>>>>>>>");
        BasePage.mouseHoverAndClick(JobsListViewPage.detailViewThreeDots, JobsListViewPage.detailViewAuditLog);
    }

    private void clickOnJobDetailPopupCancelJob() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Click on Cancel Job on Job Detail Popup >>>>>>>>>>>>>>>>>>>>");
        BasePage.mouseHoverAndClick(JobsListViewPage.detailViewThreeDots, JobsListViewPage.detailViewCancelJob);
    }

    private void gotoEligibleWorkersTab() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Move to Eligible Workers tab on Job Detail Popup >>>>>>>>>>>>>>>>>>>>");
        BasePage.waitUntilElementClickable(listViewPage.detailViewEligibleWorkersTab, 30);
        BasePage.clickWithJavaScript(listViewPage.detailViewEligibleWorkersTab);
    }

    private void gotoSuggestedWorkersTab() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Move to Suggested Workers tab on Job Detail Popup >>>>>>>>>>>>>>>>>>>>");
        BasePage.waitUntilElementClickable(listViewPage.detailViewSuggestedWorkersTab, 30);
        BasePage.clickWithJavaScript(listViewPage.detailViewSuggestedWorkersTab);
    }

    private void gotoSelectedWorkersTab() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Move to Selected Workers tab on Job Detail Popup >>>>>>>>>>>>>>>>>>>>");
        BasePage.waitUntilElementClickable(listViewPage.detailViewSelectedWorkersTab, 30);
        BasePage.clickWithJavaScript(listViewPage.detailViewSelectedWorkersTab);
    }

    private void gotoRejectedWorkersTab() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Move to Rejected Workers tab on Job Detail Popup >>>>>>>>>>>>>>>>>>>>");
        BasePage.waitUntilElementClickable(listViewPage.detailViewRejectedWorkersTab, 30);
        BasePage.clickWithJavaScript(listViewPage.detailViewRejectedWorkersTab);
    }

    private void eligibleWorkersFilterByAgency() {
        logger.info("<<<<<<<<<<<<<<<<<<<<<<< Searching eligible workers >>>>>>>>>>>>>>>>>>>>");
//        BasePage.waitUntilElementClickable();
    }
}
