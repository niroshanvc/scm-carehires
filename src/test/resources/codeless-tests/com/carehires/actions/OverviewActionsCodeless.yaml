---
class: "com.carehires.actions.OverviewActions"
fields: []
imports:
- "void"
- "com.carehires.utils.BasePage"
- "org.openqa.selenium.WebDriver"
- "org.openqa.selenium.WebElement"
- "org.openqa.selenium.support.PageFactory"
- "com.carehires.pages.OverviewPage"
- "java.lang.String"
- "org.hamcrest.CoreMatchers"
- "org.hamcrest.Matcher"
- "org.hamcrest.MatcherAssert"
methods:
- targetMethod: "waitAndAcceptCookies(): void result"
  tests:
  - name: "waitUntilElementDisplayedTest"
    target: "NEW OverviewActions()"
    variables:
    - BasePage.class: "MOCK"
      mock-expressions:
      - "getDriver(): WebDriver webDriver"
      - "waitUntilElementPresent(WebElement webElement, int timeOutSeconds): void\
        \ void2"
      - "clickWithJavaScript(WebElement webElement2): void void3"
    - webDriver: "MOCK"
    - void2: "VOID"
    - webElement: null
    - timeOutSeconds: 60
    - void3: "VOID"
    - webElement2: null
    - PageFactory.class: "MOCK"
      mock-expressions:
      - "initElements(WebDriver webDriver, OverviewPage overviewPage-any): void void"
    - void: "VOID"
    - overviewPage-any: "ANY"
    - void4: "VOID"
    - result: "REF void4"
  sourceCodeSignature: "void waitAndAcceptCookies()"
- targetMethod: "verifyPageTitle(): void result"
  tests:
  - name: "verifyPageTitleTest"
    target: "NEW OverviewActions()"
    variables:
    - BasePage.class: "MOCK"
      mock-expressions:
      - "getDriver(): WebDriver webDriver"
      - "waitUntilPageCompletelyLoaded(): void void2"
      - "getPageTitle(): String string"
    - webDriver: "MOCK"
    - void2: "VOID"
    - string: "A "
    - CoreMatchers.class.real: "EVAL CoreMatchers.class"
      method-calls:
      - "is(String string3): Matcher<String> matcher"
    - string3: "Care Hires Portal Business Web Application"
    - matcher: "EVAL CoreMatchers.is(String string3):Matcher<String>"
    - MatcherAssert.class: "MOCK"
      mock-expressions:
      - "assertThat(String reason, String string2, Matcher<String> matcher): void\
        \ void3"
    - void3: "VOID"
    - reason: "Page title is incorrect"
    - string2: "A"
    - PageFactory.class: "MOCK"
      mock-expressions:
      - "initElements(WebDriver webDriver, OverviewPage overviewPage-any): void void"
    - void: "VOID"
    - overviewPage-any: "ANY"
    - void4: "VOID"
    - result: "REF void4"
  sourceCodeSignature: "void verifyPageTitle()"
