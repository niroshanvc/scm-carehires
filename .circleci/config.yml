version: 2.1

executors:
  java-executor:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: ~/repo

parameters:
  browser:
    type: string
    default: "chrome" # Default browser
  feature_tag:
    type: string
    default: "@Smoke" # Default test case tag
  environment:
    type: string
    default: "dev" # Default environment
  email:
    type: string
    default: "niroshanvc@gmail.com" # Default email

jobs:
  build:
    executor: java-executor
    parameters:
      browser:
        type: string
      feature_tag:
        type: string
      environment:
        type: string
      email:
        type: string
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y xvfb unzip binutils jq  # Added jq
            sudo apt-get update
            sudo apt-get install -y xvfb unzip binutils  # Added binutils
            sudo apt-get update
            sudo apt-get install -y xvfb
            sudo apt-get install -y unzip
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
            curl -sS -o chromedriver.zip https://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip
            sudo unzip chromedriver.zip -d /usr/local/bin/
            rm chromedriver.zip

      - run:
          name: Generate Cucumber Reports
          command: mvn clean verify  # Ensure that Cucumber reports are generated
            - run:
                name: Prepare Report for Email
                command: |
                  #  This assumes Surefire reports are in target/surefire-reports
                  #  You might need to adjust this based on your report location and type
                  cd target/surefire-reports
                  for file in *.txt *.xml *.html; do  # Adjust file extensions as needed
                    if [ -f "$file" ]; then
                      if ! file -i "$file" | grep -q "charset=utf-8"; then
                        echo "Converting $file to UTF-8"
                        iconv -f ISO-8859-1 -t UTF-8 "$file" -o "$file.utf8" && mv "$file.utf8" "$file"
                      fi
                    else
                      echo "Skipping $file as it does not exist"
                    fi
                  done
                  zip -r test-report.zip .   # Zip the reports
                  cd ../..  # Go back to the repo root

            - store_artifacts:
                path: target/cucumber-reports  # Path to cucumber reports
                destination: cucumber-reports

            - store_artifacts:
                path: target/surefire-reports/test-report.zip
                destination: test-report.zip

            - run:
                name: Send Email Without Attachment
                command: |
                  echo '{
                    "from": {
                      "email": "niroshan.desilva@carehires.com"
                    },
                    "personalizations": [
                      {
                        "to": [
                          {
                            "email": "<< parameters.email >>"
                          }
                        ],
                        "subject": "Test Execution Report for << parameters.environment >>"
                      }
                    ],
                    "content": [
                      {
                        "type": "text/plain",
                        "value": "The test execution report is attached."
                      }
                    ]
                  }' > email_payload.json
                  
                  curl -X POST https://api.sendgrid.com/v3/mail/send \
                    -H "Authorization: Bearer $SENDGRID_API_KEY" \
                    -H "Content-Type: application/json" \
                    -d @email_payload.json || echo "Error sending email!"
            - run:
                name: Send Email with Attachment
                command: |
                  export LC_ALL=en_US.UTF-8
                  export LANG=en_US.UTF-8
                  
                  # Encode the attachment
                  base64 -w 0 target/surefire-reports/test-report.zip > encoded_attachment.txt
                  
                  # Construct the JSON payload
                  echo '{
                    "from": {
                      "email": "niroshan.desilva@carehires.com"
                    },
                    "personalizations": [
                      {
                        "to": [
                          {
                            "email": "<< parameters.email >>"
                          }
                        ],
                        "subject": "Test Execution Report for << parameters.environment >>"
                      }
                    ],
                    "content": [
                      {
                        "type": "text/plain",
                        "value": "The test execution report is attached."
                      }
                    ],
                    "attachments": [
                      {
                        "content": "'$(cat encoded_attachment.txt)'",
                        "filename": "test-report.zip",
                        "type": "application/zip",
                        "disposition": "attachment"
                      }
                    ]
                  }' > email_payload.json
                  
                  # Debug the JSON payload
                  echo "Generated email payload:"
                  head -c 1000 email_payload.json  # Print the first 1000 characters for debugging
                  
                  # Send the email using SendGrid API
                  curl -X POST https://api.sendgrid.com/v3/mail/send \
                    -H "Authorization: Bearer $SENDGRID_API_KEY" \
                    -H "Content-Type: application/json" \
                    -d @email_payload.json || echo "Error sending email!"

workflows:
  version: 2
  test-workflow:
    jobs:
      - build:
          browser: << pipeline.parameters.browser >>
          feature_tag: << pipeline.parameters.feature_tag >>
          environment: << pipeline.parameters.environment >>
          email: << pipeline.parameters.email >>